---
- name: PGP key installed
  rpm_key: state=present key=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
  when: ansible_os_family == 'RedHat'

- block:
  - name: MariaDB repository added (CentOS/RHEL 6)
    yum_repository:
      name: mariadb
      description: MariaDB 10.1 centos repository
      baseurl: http://yum.mariadb.org/10.1/centos6-amd64
      gpgkey: https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
      gpgcheck: yes

  - name: MariaDB installed (CentOS/RHEL 6)
    package: name={{ item }} state=latest
    with_items:
      - MariaDB-client
      - MariaDB-common
      - MariaDB-compat
      - MariaDB-devel
      - MariaDB-server
      - MariaDB-shared
      - MySQL-python

  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version|int == 6

- block:
  - name: MariaDB repository installed (CentOS/RHEL 7)
    yum_repository:
      name: mariadb
      description: MariaDB 10.1 centos repository
      baseurl: http://yum.mariadb.org/10.1/centos7-amd64
      gpgkey: https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
      gpgcheck: yes

  - name: MariaDB installed (CentOS/RHEL 7)
    package: name={{ item }} state=latest
    with_items:
      - mariadb
      - mariadb-devel
      - mariadb-server
      - mariadb-libs
      - mariadb-embedded
      - MySQL-python

  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version|int == 7

- name: stat custom my.cnf.j2
  stat: path=/vagrant/config/my.cnf.j2
  register: is_custom_my_conf

- name: custom my.cnf changed
  template: src=/vagrant/config/my.cnf.j2 dest=/etc/my.cnf
  when: is_custom_my_conf.stat.exists

- name: my.cnf changed
  template: src=my.cnf.j2 dest=/etc/my.cnf
  when: not is_custom_my_conf.stat.exists

- name: mysqld started and enabled
  service: name=mysql state=restarted enabled=yes

- name: set MariaDB root password
  mysql_user:
    name: "root"
    password: "{{ db_root_password }}"
    host: "localhost"
    state: present
  ignore_errors: yes

- name: set MariaDB root password
  mysql_user:
    name: "root"
    password: "{{ db_root_password }}"
    host: "{{ item }}"
    state: present
    login_user: "root"
    login_password: "{{ db_root_password }}"
  with_items:
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1

- name: Delete blank MariaDB users
  mysql_user:
    name: ""
    host: "{{ item }}"
    state: absent
    login_user: "root"
    login_password: "{{ db_root_password }}"
  with_items:
    - localhost

- name: Drop MariaDB test database
  mysql_db:
     name: test
     state: absent
     login_user: "root"
     login_password: "{{ db_root_password }}"

- name: create symbolic link
  file: src=/var/lib/mysql/mysql.sock dest=/tmp/mysql.sock state=link
